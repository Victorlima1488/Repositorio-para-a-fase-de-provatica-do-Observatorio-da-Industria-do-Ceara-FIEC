services:
  # Airflow Scheduler
  airflow-scheduler:
    image: apache/airflow:2.1.2
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__SQL_ALCHEMY_POOL_SIZE=5
      - AIRFLOW__CORE__SQL_ALCHEMY_POOL_RECYCLE=1800
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - PYTHONPATH=/opt/airflow:/opt/airflow/src:/opt/airflow/src/etl:/opt/airflow/dags
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
    command: scheduler
    restart: always
    depends_on:
      - postgres

  # Airflow Webserver
  airflow-webserver:
    image: apache/airflow:2.1.2
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__AUTHENTICATE=False
      - AIRFLOW__WEBSERVER__AUTH_BACKEND=airflow.www.security.SecureApp
      - PYTHONPATH=/opt/airflow:/opt/airflow/src:/opt/airflow/dags
    volumes:
      - ./dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
    ports:
      - "8080:8080"
    command: webserver
    restart: always
    depends_on:
      - postgres
      - airflow-scheduler

  # PostgreSQL Database for Airflow
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

volumes:
  postgres_data: